name: 'argocd-install'
on:
  push:
    branches:
      - master
  repository_dispatch:
    types: [argocd-install]

env:
  PROJECT_ID: ${{secrets.PROJECT_ID}}
  GKE_CLUSTER: my-gke-cluster
  GKE_ZONE: us-west1-a
jobs:
  argocd-install:
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v2

      - name: Setup Google Cloud
        uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          version: '290.0.1'
          project_id: ${{secrets.PROJECT_ID}}
          service_account_email: ${{ secrets.SA_EMAIL }}
          service_account_key: ${{ secrets.SA_KEY }}

      - name: Setup GKE
        run: |-
          gcloud container clusters get-credentials "$GKE_CLUSTER" --zone "$GKE_ZONE"

      - name: Checkout argocd-admin repository
        uses: actions/checkout@v2
        with:
          repository: sabure500/argocd-admin
          ref: master
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

      - name: Setup Kustomize
        run: |-
          curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/v3.2.0/kustomize_3.2.0_linux_amd64
          chmod u+x ./kustomize

      - name: Install ArgoCD Application
        run: |-
          kubectl apply -f argocd-namespace.yaml
          kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/v1.7.8/manifests/install.yaml
          ./kustomize build . | kubectl apply -n argocd -f -
          kubectl get deploy,pod,svc -n argocd

      - name: Download ArgoCD CLI
        run: |-
          curl -sSL -o ./argocd https://github.com/argoproj/argo-cd/releases/download/v1.7.8/argocd-linux-amd64
          chmod +x ./argocd

      - name: ArgoCD change password
        run: |-
          sleep 1m
          ARGOCD_SERVER=$(kubectl describe node |grep ExternalIP | awk '{print $2}'):30000
          echo $ARGOCD_SERVER
          ARGOCD_TEMP_PASSWORD=$(kubectl get pods -n argocd -l app.kubernetes.io/name=argocd-server -o name | cut -d'/' -f 2)
          ./argocd login --insecure --username admin --password $ARGOCD_TEMP_PASSWORD $ARGOCD_SERVER
          ./argocd account update-password --current-password $ARGOCD_TEMP_PASSWORD --new-password ${{secrets.ARGOCD_PASSWORD}}
